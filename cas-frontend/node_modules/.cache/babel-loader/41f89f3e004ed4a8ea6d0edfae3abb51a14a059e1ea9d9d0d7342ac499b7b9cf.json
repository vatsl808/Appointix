{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppointmentList from '../components/AppointmentList';\nimport EditAppointmentModal from '../components/EditAppointmentModal'; // Import the modal\nimport '../styles/dashboard.css';\nimport '../styles/main.css';\n// import '../styles/modal.css'; // Import modal styles later\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDashboard() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [appointmentToEdit, setAppointmentToEdit] = useState(null);\n  useEffect(() => {\n    // TODO: Replace with actual API call\n    const fetchAppointments = async () => {\n      try {\n        // Mock data\n        const mockAppointments = [{\n          id: 1,\n          doctorName: 'Dr. Smith',\n          date: '2025-04-10',\n          time: '10:00',\n          status: 'upcoming',\n          reason: 'Annual checkup'\n        }, {\n          id: 2,\n          doctorName: 'Dr. Johnson',\n          date: '2025-03-15',\n          time: '14:30',\n          status: 'completed',\n          reason: 'Headache consultation'\n        }];\n        setAppointments(mockAppointments);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, []);\n  const handleCancel = appointmentId => {\n    // TODO: Replace with actual API call\n    console.log('Canceling appointment:', appointmentId);\n    setAppointments(appointments.filter(a => a.id !== appointmentId));\n  };\n\n  // --- Edit Modal Handlers ---\n  const handleEditRequest = appointment => {\n    console.log(\"Editing appointment:\", appointment);\n    setAppointmentToEdit(appointment);\n    setIsEditModalOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setIsEditModalOpen(false);\n    setAppointmentToEdit(null);\n  };\n  const handleUpdateAppointment = updatedData => {\n    // updatedData should contain { id, date, time }\n    console.log(\"Updating appointment with:\", updatedData);\n    setAppointments(prevAppointments => prevAppointments.map(app => app.id === updatedData.id ? {\n      ...app,\n      date: updatedData.date,\n      time: updatedData.time\n    } : app));\n    handleCloseEditModal();\n    // TODO: Add actual API call here later\n  };\n  // --- End Edit Modal Handlers ---\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading appointments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upcoming & Past Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/doctors\",\n          className: \"btn btn-primary\",\n          children: [\" \", \"Book New Appointment\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentList, {\n        appointments: appointments,\n        onCancel: handleCancel,\n        onEditRequest: handleEditRequest // Pass the handler\n        ,\n        userType: \"patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAppointmentModal, {\n      isOpen: isEditModalOpen,\n      appointment: appointmentToEdit,\n      onUpdate: handleUpdateAppointment,\n      onClose: handleCloseEditModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDashboard, \"HNKH36LMDt0qL8EFdKuyovcGyzg=\");\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","AppointmentList","EditAppointmentModal","jsxDEV","_jsxDEV","PatientDashboard","_s","appointments","setAppointments","loading","setLoading","isEditModalOpen","setIsEditModalOpen","appointmentToEdit","setAppointmentToEdit","fetchAppointments","mockAppointments","id","doctorName","date","time","status","reason","error","console","handleCancel","appointmentId","log","filter","a","handleEditRequest","appointment","handleCloseEditModal","handleUpdateAppointment","updatedData","prevAppointments","map","app","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onCancel","onEditRequest","userType","isOpen","onUpdate","onClose","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/PatientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppointmentList from '../components/AppointmentList';\r\nimport EditAppointmentModal from '../components/EditAppointmentModal'; // Import the modal\r\nimport '../styles/dashboard.css';\r\nimport '../styles/main.css';\r\n// import '../styles/modal.css'; // Import modal styles later\r\n\r\nfunction PatientDashboard() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [appointmentToEdit, setAppointmentToEdit] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // TODO: Replace with actual API call\r\n    const fetchAppointments = async () => {\r\n      try {\r\n        // Mock data\r\n        const mockAppointments = [\r\n          { \r\n            id: 1, \r\n            doctorName: 'Dr. Smith', \r\n            date: '2025-04-10', \r\n            time: '10:00', \r\n            status: 'upcoming',\r\n            reason: 'Annual checkup'\r\n          },\r\n          { \r\n            id: 2, \r\n            doctorName: 'Dr. Johnson', \r\n            date: '2025-03-15', \r\n            time: '14:30', \r\n            status: 'completed',\r\n            reason: 'Headache consultation'\r\n          },\r\n        ];\r\n        setAppointments(mockAppointments);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching appointments:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const handleCancel = (appointmentId) => {\r\n    // TODO: Replace with actual API call\r\n    console.log('Canceling appointment:', appointmentId);\r\n    setAppointments(appointments.filter(a => a.id !== appointmentId));\r\n  };\r\n\r\n  // --- Edit Modal Handlers ---\r\n  const handleEditRequest = (appointment) => {\r\n    console.log(\"Editing appointment:\", appointment);\r\n    setAppointmentToEdit(appointment);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setIsEditModalOpen(false);\r\n    setAppointmentToEdit(null);\r\n  };\r\n\r\n  const handleUpdateAppointment = (updatedData) => {\r\n    // updatedData should contain { id, date, time }\r\n    console.log(\"Updating appointment with:\", updatedData);\r\n    setAppointments(prevAppointments =>\r\n      prevAppointments.map(app =>\r\n        app.id === updatedData.id\r\n          ? { ...app, date: updatedData.date, time: updatedData.time }\r\n          : app\r\n      )\r\n    );\r\n    handleCloseEditModal();\r\n    // TODO: Add actual API call here later\r\n  };\r\n  // --- End Edit Modal Handlers ---\r\n\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading appointments...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-page\"> {/* Use dashboard-page for overall padding/background */}\r\n      <div className=\"dashboard-header\">\r\n        <h2>My Dashboard</h2> {/* Use h2 for consistency */}\r\n      </div>\r\n\r\n      {/* Section for Appointments */}\r\n      <div className=\"dashboard-section\">\r\n        <div className=\"dashboard-section-header\">\r\n          <h3>Upcoming & Past Appointments</h3>\r\n          <Link to=\"/doctors\" className=\"btn btn-primary\"> {/* Use consistent button style */}\r\n            Book New Appointment\r\n          </Link>\r\n        </div>\r\n        <AppointmentList\r\n          appointments={appointments}\r\n          onCancel={handleCancel}\r\n          onEditRequest={handleEditRequest} // Pass the handler\r\n          userType=\"patient\"\r\n        />\r\n      </div>\r\n\r\n      {/* TODO: Add EditAppointmentModal component here later */}\r\n      {/* <EditAppointmentModal\r\n        isOpen={isEditModalOpen}\r\n        appointment={appointmentToEdit}\r\n        onUpdate={handleUpdateAppointment}\r\n        onClose={handleCloseEditModal}\r\n      />\r\n\r\n      {/* Render the Edit Modal */}\r\n      <EditAppointmentModal\r\n        isOpen={isEditModalOpen}\r\n        appointment={appointmentToEdit}\r\n        onUpdate={handleUpdateAppointment}\r\n        onClose={handleCloseEditModal}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}