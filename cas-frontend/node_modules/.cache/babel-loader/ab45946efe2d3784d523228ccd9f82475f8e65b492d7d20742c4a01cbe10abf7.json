{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\BookAppointmentPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport AppointmentForm from '../components/AppointmentForm';\nimport '../styles/appointment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookAppointmentPage() {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // TODO: Replace with actual API call\n    const fetchDoctor = async () => {\n      try {\n        // Mock data\n        const mockDoctors = [{\n          id: 1,\n          name: 'Dr. Smith',\n          specialization: 'Cardiology'\n        }, {\n          id: 2,\n          name: 'Dr. Johnson',\n          specialization: 'Neurology'\n        }, {\n          id: 3,\n          name: 'Dr. Williams',\n          specialization: 'Pediatrics'\n        }];\n        const foundDoctor = mockDoctors.find(d => d.id === parseInt(doctorId));\n        setDoctor(foundDoctor);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching doctor:', error);\n        setLoading(false);\n      }\n    };\n    fetchDoctor();\n  }, [doctorId]);\n  const handleSubmit = async appointmentData => {\n    try {\n      // TODO: Replace with actual API call\n      console.log('Booking appointment with:', appointmentData);\n      // Mock successful booking\n      navigate('/patient-dashboard');\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctor details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (!doctor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Doctor not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Book Appointment with \", doctor.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"specialization\",\n      children: doctor.specialization\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {\n      doctorId: doctorId,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointmentPage, \"MR675QgEkT5XdrlgbcQuxZkPSNo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BookAppointmentPage;\nexport default BookAppointmentPage;\nvar _c;\n$RefreshReg$(_c, \"BookAppointmentPage\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","AppointmentForm","jsxDEV","_jsxDEV","BookAppointmentPage","_s","doctorId","navigate","doctor","setDoctor","loading","setLoading","fetchDoctor","mockDoctors","id","name","specialization","foundDoctor","find","d","parseInt","error","console","handleSubmit","appointmentData","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/BookAppointmentPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport AppointmentForm from '../components/AppointmentForm';\r\nimport '../styles/appointment.css';\r\n\r\nfunction BookAppointmentPage() {\r\n  const { doctorId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // TODO: Replace with actual API call\r\n    const fetchDoctor = async () => {\r\n      try {\r\n        // Mock data\r\n        const mockDoctors = [\r\n          { id: 1, name: 'Dr. Smith', specialization: 'Cardiology' },\r\n          { id: 2, name: 'Dr. Johnson', specialization: 'Neurology' },\r\n          { id: 3, name: 'Dr. Williams', specialization: 'Pediatrics' },\r\n        ];\r\n        const foundDoctor = mockDoctors.find(d => d.id === parseInt(doctorId));\r\n        setDoctor(foundDoctor);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching doctor:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctor();\r\n  }, [doctorId]);\r\n\r\n  const handleSubmit = async (appointmentData) => {\r\n    try {\r\n      // TODO: Replace with actual API call\r\n      console.log('Booking appointment with:', appointmentData);\r\n      // Mock successful booking\r\n      navigate('/patient-dashboard');\r\n    } catch (error) {\r\n      console.error('Error booking appointment:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctor details...</div>;\r\n  }\r\n\r\n  if (!doctor) {\r\n    return <div className=\"error\">Doctor not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"appointment-page\">\r\n      <h1>Book Appointment with {doctor.name}</h1>\r\n      <p className=\"specialization\">{doctor.specialization}</p>\r\n      <AppointmentForm doctorId={doctorId} onSubmit={handleSubmit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookAppointmentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}