{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import '../styles/profile.css'; // We'll create this later\nimport '../styles/main.css'; // For base styles\n\n// Mock data - replace with API call later\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockDoctorData = {\n  1: {\n    id: 1,\n    name: 'Dr. Evelyn Reed',\n    specialization: 'Cardiology',\n    email: 'evelyn.reed@appointix.test',\n    phone: '555-123-4567',\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\n    profilePictureUrl: null // Or path to a default image if available\n  },\n  2: {\n    id: 2,\n    name: 'Dr. Marcus Chen',\n    specialization: 'Neurology',\n    email: 'marcus.chen@appointix.test',\n    phone: '555-987-6543',\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\n    profilePictureUrl: null\n  },\n  // Add more mock doctors as needed\n  3: {\n    id: 3,\n    name: 'Dr. Anya Sharma',\n    specialization: 'Pediatrics',\n    email: 'anya.sharma@appointix.test',\n    phone: '555-111-2222',\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\n    profilePictureUrl: null\n  }\n};\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    setError('');\n    // Simulate API call\n    setTimeout(() => {\n      const foundDoctor = mockDoctorData[id];\n      if (foundDoctor) {\n        setDoctor(foundDoctor);\n      } else {\n        setError('Doctor not found.');\n      }\n      setLoading(false);\n    }, 500); // Simulate network delay\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctor profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    // You might want a more styled error page/component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page-container error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  if (!doctor) {\n    // Should ideally not happen if error is handled, but good fallback\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page-container\",\n      children: \"Doctor data unavailable.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n  // TODO: Implement Steps 4-8 (Display, Image Upload, Editable Fields, Styling)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page container page-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: doctor.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Specialization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this), \" \", doctor.specialization]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this), \" \", doctor.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorProfilePage, \"To8Nlzeiw7Ty+SgeQdDnLXd6Y2c=\", false, function () {\n  return [useParams];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","mockDoctorData","id","name","specialization","email","phone","bio","profilePictureUrl","DoctorProfilePage","_s","doctor","setDoctor","loading","setLoading","error","setError","setTimeout","foundDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n// import '../styles/profile.css'; // We'll create this later\r\nimport '../styles/main.css'; // For base styles\r\n\r\n// Mock data - replace with API call later\r\nconst mockDoctorData = {\r\n  1: {\r\n    id: 1,\r\n    name: 'Dr. Evelyn Reed',\r\n    specialization: 'Cardiology',\r\n    email: 'evelyn.reed@appointix.test',\r\n    phone: '555-123-4567',\r\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\r\n    profilePictureUrl: null // Or path to a default image if available\r\n  },\r\n  2: {\r\n    id: 2,\r\n    name: 'Dr. Marcus Chen',\r\n    specialization: 'Neurology',\r\n    email: 'marcus.chen@appointix.test',\r\n    phone: '555-987-6543',\r\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\r\n    profilePictureUrl: null\r\n  },\r\n  // Add more mock doctors as needed\r\n  3: {\r\n    id: 3,\r\n    name: 'Dr. Anya Sharma',\r\n    specialization: 'Pediatrics',\r\n    email: 'anya.sharma@appointix.test',\r\n    phone: '555-111-2222',\r\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\r\n    profilePictureUrl: null\r\n  }\r\n};\r\n\r\nfunction DoctorProfilePage() {\r\n  const { id } = useParams();\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError('');\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      const foundDoctor = mockDoctorData[id];\r\n      if (foundDoctor) {\r\n        setDoctor(foundDoctor);\r\n      } else {\r\n        setError('Doctor not found.');\r\n      }\r\n      setLoading(false);\r\n    }, 500); // Simulate network delay\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctor profile...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    // You might want a more styled error page/component\r\n    return <div className=\"container page-container error\">{error}</div>;\r\n  }\r\n\r\n  if (!doctor) {\r\n    // Should ideally not happen if error is handled, but good fallback\r\n    return <div className=\"container page-container\">Doctor data unavailable.</div>;\r\n  }\r\n\r\n  // TODO: Implement Steps 4-8 (Display, Image Upload, Editable Fields, Styling)\r\n\r\n  return (\r\n    <div className=\"profile-page container page-container\"> {/* Basic structure */}\r\n      <h1>Doctor Profile</h1>\r\n      <div className=\"profile-section\"> {/* Similar to dashboard sections */}\r\n        <h2>{doctor.name}</h2>\r\n        <p><strong>Specialization:</strong> {doctor.specialization}</p>\r\n        <p><strong>Email:</strong> {doctor.email}</p>\r\n        {/* Add more fields and functionality here */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA,OAAO,oBAAoB,CAAC,CAAC;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAE;IACDC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,cAAc,EAAE,YAAY;IAC5BC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAE,cAAc;IACrBC,GAAG,EAAE,4IAA4I;IACjJC,iBAAiB,EAAE,IAAI,CAAC;EAC1B,CAAC;EACD,CAAC,EAAE;IACDN,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,cAAc,EAAE,WAAW;IAC3BC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAE,cAAc;IACrBC,GAAG,EAAE,4IAA4I;IACjJC,iBAAiB,EAAE;EACrB,CAAC;EACD;EACA,CAAC,EAAE;IACDN,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,cAAc,EAAE,YAAY;IAC5BC,KAAK,EAAE,4BAA4B;IACnCC,KAAK,EAAE,cAAc;IACrBC,GAAG,EAAE,gIAAgI;IACrIC,iBAAiB,EAAE;EACrB;AACF,CAAC;AAED,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAER;EAAG,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ;IACAC,UAAU,CAAC,MAAM;MACf,MAAMC,WAAW,GAAGjB,cAAc,CAACC,EAAE,CAAC;MACtC,IAAIgB,WAAW,EAAE;QACfN,SAAS,CAACM,WAAW,CAAC;MACxB,CAAC,MAAM;QACLF,QAAQ,CAAC,mBAAmB,CAAC;MAC/B;MACAF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACX,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;EAER,IAAIW,OAAO,EAAE;IACX,oBAAOb,OAAA;MAAKmB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,IAAIT,KAAK,EAAE;IACT;IACA,oBAAOf,OAAA;MAAKmB,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtE;EAEA,IAAI,CAACb,MAAM,EAAE;IACX;IACA,oBAAOX,OAAA;MAAKmB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjF;;EAEA;;EAEA,oBACExB,OAAA;IAAKmB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,GAAC,GAAC,eACtDpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,GAAC,eAChCpB,OAAA;QAAAoB,QAAA,EAAKT,MAAM,CAACR;MAAI;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBxB,OAAA;QAAAoB,QAAA,gBAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,MAAM,CAACP,cAAc;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DxB,OAAA;QAAAoB,QAAA,gBAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACb,MAAM,CAACN,KAAK;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CAhDQD,iBAAiB;EAAA,QACTX,SAAS;AAAA;AAAA2B,EAAA,GADjBhB,iBAAiB;AAkD1B,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}