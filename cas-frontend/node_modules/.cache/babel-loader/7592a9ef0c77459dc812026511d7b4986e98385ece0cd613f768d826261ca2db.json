{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaUserMd } from 'react-icons/fa'; // Icon for placeholder\nimport '../styles/profile.css'; // Import the profile styles\nimport '../styles/main.css'; // For base styles\n\n// Mock data - replace with API call later\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockDoctorData = {\n  1: {\n    id: 1,\n    name: 'Dr. Evelyn Reed',\n    specialization: 'Cardiology',\n    email: 'evelyn.reed@appointix.test',\n    phone: '555-123-4567',\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\n    profilePictureUrl: null // Or path to a default image if available\n  },\n  2: {\n    id: 2,\n    name: 'Dr. Marcus Chen',\n    specialization: 'Neurology',\n    email: 'marcus.chen@appointix.test',\n    phone: '555-987-6543',\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\n    profilePictureUrl: null\n  },\n  // Add more mock doctors as needed\n  3: {\n    id: 3,\n    name: 'Dr. Anya Sharma',\n    specialization: 'Pediatrics',\n    email: 'anya.sharma@appointix.test',\n    phone: '555-111-2222',\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\n    profilePictureUrl: null\n  }\n};\n\n// Removed misplaced import from here\n\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [profilePicPreview, setProfilePicPreview] = useState(null);\n  const [profilePicFile, setProfilePicFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false); // State for edit mode\n  const [editablePhone, setEditablePhone] = useState('');\n  const [editableBio, setEditableBio] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    setError('');\n    // Simulate API call\n    setTimeout(() => {\n      const foundDoctor = mockDoctorData[id];\n      if (foundDoctor) {\n        setDoctor(foundDoctor);\n        // Initialize editable fields when doctor data loads\n        setEditablePhone(foundDoctor.phone || '');\n        setEditableBio(foundDoctor.bio || '');\n      } else {\n        setError('Doctor not found.');\n      }\n      setLoading(false);\n    }, 500); // Simulate network delay\n  }, [id]); // Re-run if ID changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctor profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    // You might want a more styled error page/component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page-container error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  if (!doctor) {\n    // Should ideally not happen if error is handled, but good fallback\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container page-container\",\n      children: \"Doctor data unavailable.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- Handlers ---\n  const handleProfilePicChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      setProfilePicFile(file); // Store file for potential upload\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePicPreview(reader.result); // Set preview URL\n      };\n      reader.readAsDataURL(file);\n    } else {\n      // Handle invalid file type if needed\n      setProfilePicFile(null);\n      setProfilePicPreview(null);\n    }\n  };\n  const handleEditToggle = () => {\n    if (!isEditing) {\n      // Entering edit mode, ensure editable fields match current doctor state\n      setEditablePhone(doctor.phone || '');\n      setEditableBio(doctor.bio || '');\n    } else {\n      // Cancelling edit mode, reset preview if any\n      setProfilePicPreview(null);\n      setProfilePicFile(null);\n    }\n    setIsEditing(!isEditing);\n  };\n  const handleSave = () => {\n    // Simulate saving data\n    console.log(\"Saving profile data:\", {\n      phone: editablePhone,\n      bio: editableBio,\n      pictureFile: profilePicFile ? profilePicFile.name : 'No new picture'\n    });\n\n    // Update the main doctor state (mock update)\n    const updatedDoctor = {\n      ...doctor,\n      phone: editablePhone,\n      bio: editableBio,\n      // If there's a preview, make it the new \"official\" URL for mock display\n      profilePictureUrl: profilePicPreview || doctor.profilePictureUrl\n    };\n    setDoctor(updatedDoctor);\n\n    // Mock data persistence (if needed for demo) - This wouldn't be done in a real app\n    // mockDoctorData[id] = updatedDoctor;\n\n    // Exit edit mode and clear preview/file state\n    setIsEditing(false);\n    setProfilePicPreview(null);\n    setProfilePicFile(null);\n\n    // TODO: Add success/error message handling based on actual API response\n  };\n\n  // --- Render Logic ---\n  const displayImageUrl = profilePicPreview || doctor.profilePictureUrl;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page container page-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section profile-header-section\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-picture-container\",\n        children: [displayImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: displayImageUrl,\n          alt: `${doctor.name}'s profile`,\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-picture-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(FaUserMd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"profilePicInput\",\n          className: \"btn btn-secondary btn-sm upload-btn\",\n          children: displayImageUrl ? 'Change Picture' : 'Upload Picture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"profilePicInput\",\n          accept: \"image/*\",\n          onChange: handleProfilePicChange,\n          style: {\n            display: 'none'\n          } // Hide the default input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-specialization\",\n          children: doctor.specialization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-email\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `mailto:${doctor.email}`,\n            children: doctor.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contact & Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditToggle,\n          className: \"btn btn-secondary btn-sm\",\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSave,\n            className: \"btn btn-primary btn-sm\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditToggle,\n            className: \"btn btn-secondary btn-sm\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            name: \"phone\",\n            className: \"form-control\",\n            value: editablePhone,\n            onChange: e => setEditablePhone(e.target.value),\n            placeholder: \"Enter phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: doctor.phone || 'Not Provided'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bio\",\n            children: \"Bio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"bio\",\n            name: \"bio\",\n            className: \"form-control\",\n            rows: \"5\",\n            value: editableBio,\n            onChange: e => setEditableBio(e.target.value),\n            placeholder: \"Enter a short bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: doctor.bio || 'Not Provided'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorProfilePage, \"nFn9+4yn9+Zu0xVhVflyc6Yj9So=\", false, function () {\n  return [useParams];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","FaUserMd","jsxDEV","_jsxDEV","mockDoctorData","id","name","specialization","email","phone","bio","profilePictureUrl","DoctorProfilePage","_s","doctor","setDoctor","loading","setLoading","error","setError","profilePicPreview","setProfilePicPreview","profilePicFile","setProfilePicFile","isEditing","setIsEditing","editablePhone","setEditablePhone","editableBio","setEditableBio","setTimeout","foundDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleProfilePicChange","event","file","target","files","type","startsWith","reader","FileReader","onloadend","result","readAsDataURL","handleEditToggle","handleSave","console","log","pictureFile","updatedDoctor","displayImageUrl","src","alt","htmlFor","accept","onChange","style","display","href","onClick","value","e","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaUserMd } from 'react-icons/fa'; // Icon for placeholder\r\nimport '../styles/profile.css'; // Import the profile styles\r\nimport '../styles/main.css'; // For base styles\r\n\r\n// Mock data - replace with API call later\r\nconst mockDoctorData = {\r\n  1: {\r\n    id: 1,\r\n    name: 'Dr. Evelyn Reed',\r\n    specialization: 'Cardiology',\r\n    email: 'evelyn.reed@appointix.test',\r\n    phone: '555-123-4567',\r\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\r\n    profilePictureUrl: null // Or path to a default image if available\r\n  },\r\n  2: {\r\n    id: 2,\r\n    name: 'Dr. Marcus Chen',\r\n    specialization: 'Neurology',\r\n    email: 'marcus.chen@appointix.test',\r\n    phone: '555-987-6543',\r\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\r\n    profilePictureUrl: null\r\n  },\r\n  // Add more mock doctors as needed\r\n  3: {\r\n    id: 3,\r\n    name: 'Dr. Anya Sharma',\r\n    specialization: 'Pediatrics',\r\n    email: 'anya.sharma@appointix.test',\r\n    phone: '555-111-2222',\r\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\r\n    profilePictureUrl: null\r\n  }\r\n};\r\n\r\n// Removed misplaced import from here\r\n\r\nfunction DoctorProfilePage() {\r\n  const { id } = useParams();\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [profilePicPreview, setProfilePicPreview] = useState(null);\r\n  const [profilePicFile, setProfilePicFile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false); // State for edit mode\r\n  const [editablePhone, setEditablePhone] = useState('');\r\n  const [editableBio, setEditableBio] = useState('');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError('');\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      const foundDoctor = mockDoctorData[id];\r\n      if (foundDoctor) {\r\n        setDoctor(foundDoctor);\r\n        // Initialize editable fields when doctor data loads\r\n        setEditablePhone(foundDoctor.phone || '');\r\n        setEditableBio(foundDoctor.bio || '');\r\n      } else {\r\n        setError('Doctor not found.');\r\n      }\r\n      setLoading(false);\r\n    }, 500); // Simulate network delay\r\n  }, [id]); // Re-run if ID changes\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctor profile...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    // You might want a more styled error page/component\r\n    return <div className=\"container page-container error\">{error}</div>;\r\n  }\r\n\r\n  if (!doctor) {\r\n    // Should ideally not happen if error is handled, but good fallback\r\n    return <div className=\"container page-container\">Doctor data unavailable.</div>;\r\n  }\r\n\r\n  // --- Handlers ---\r\n  const handleProfilePicChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith('image/')) {\r\n      setProfilePicFile(file); // Store file for potential upload\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setProfilePicPreview(reader.result); // Set preview URL\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      // Handle invalid file type if needed\r\n      setProfilePicFile(null);\r\n      setProfilePicPreview(null);\r\n    }\r\n  };\r\n\r\n  const handleEditToggle = () => {\r\n    if (!isEditing) {\r\n      // Entering edit mode, ensure editable fields match current doctor state\r\n      setEditablePhone(doctor.phone || '');\r\n      setEditableBio(doctor.bio || '');\r\n    } else {\r\n      // Cancelling edit mode, reset preview if any\r\n      setProfilePicPreview(null);\r\n      setProfilePicFile(null);\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Simulate saving data\r\n    console.log(\"Saving profile data:\", {\r\n      phone: editablePhone,\r\n      bio: editableBio,\r\n      pictureFile: profilePicFile ? profilePicFile.name : 'No new picture'\r\n    });\r\n\r\n    // Update the main doctor state (mock update)\r\n    const updatedDoctor = {\r\n      ...doctor,\r\n      phone: editablePhone,\r\n      bio: editableBio,\r\n      // If there's a preview, make it the new \"official\" URL for mock display\r\n      profilePictureUrl: profilePicPreview || doctor.profilePictureUrl\r\n    };\r\n    setDoctor(updatedDoctor);\r\n\r\n    // Mock data persistence (if needed for demo) - This wouldn't be done in a real app\r\n    // mockDoctorData[id] = updatedDoctor;\r\n\r\n    // Exit edit mode and clear preview/file state\r\n    setIsEditing(false);\r\n    setProfilePicPreview(null);\r\n    setProfilePicFile(null);\r\n\r\n    // TODO: Add success/error message handling based on actual API response\r\n  };\r\n\r\n\r\n  // --- Render Logic ---\r\n  const displayImageUrl = profilePicPreview || doctor.profilePictureUrl;\r\n\r\n  return (\r\n    <div className=\"profile-page container page-container\"> {/* Basic structure */}\r\n      <h1>Doctor Profile</h1>\r\n      <div className=\"profile-section profile-header-section\"> {/* Section for Pic + Basic Info */}\r\n        <div className=\"profile-picture-container\">\r\n          {displayImageUrl ? (\r\n            <img src={displayImageUrl} alt={`${doctor.name}'s profile`} className=\"profile-picture\" />\r\n          ) : (\r\n            <div className=\"profile-picture-placeholder\">\r\n              <FaUserMd /> {/* Placeholder Icon */}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"profilePicInput\" className=\"btn btn-secondary btn-sm upload-btn\">\r\n            {displayImageUrl ? 'Change Picture' : 'Upload Picture'}\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"profilePicInput\"\r\n            accept=\"image/*\"\r\n            onChange={handleProfilePicChange}\r\n            style={{ display: 'none' }} // Hide the default input\r\n          />\r\n        </div>\r\n        <div className=\"profile-header-details\">\r\n          <h2>{doctor.name}</h2>\r\n          <p className=\"profile-specialization\">{doctor.specialization}</p>\r\n          <p className=\"profile-email\">\r\n             <a href={`mailto:${doctor.email}`}>{doctor.email}</a>\r\n          </p>\r\n          {/* Add other non-editable info here if needed */}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contact & Bio Section */}\r\n      <div className=\"profile-section\">\r\n        <div className=\"profile-section-header\">\r\n          <h3>Contact & Bio</h3>\r\n          {!isEditing ? (\r\n            <button onClick={handleEditToggle} className=\"btn btn-secondary btn-sm\">\r\n              Edit Profile\r\n            </button>\r\n          ) : (\r\n            <div className=\"edit-actions\">\r\n              <button onClick={handleSave} className=\"btn btn-primary btn-sm\">\r\n                Save Changes\r\n              </button>\r\n              <button onClick={handleEditToggle} className=\"btn btn-secondary btn-sm\">\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"profile-details\">\r\n          <div className=\"detail-item\">\r\n            <label htmlFor=\"phone\">Phone:</label>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"tel\"\r\n                id=\"phone\"\r\n                name=\"phone\"\r\n                className=\"form-control\"\r\n                value={editablePhone}\r\n                onChange={(e) => setEditablePhone(e.target.value)}\r\n                placeholder=\"Enter phone number\"\r\n              />\r\n            ) : (\r\n              <p>{doctor.phone || 'Not Provided'}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"detail-item\">\r\n            <label htmlFor=\"bio\">Bio:</label>\r\n            {isEditing ? (\r\n              <textarea\r\n                id=\"bio\"\r\n                name=\"bio\"\r\n                className=\"form-control\"\r\n                rows=\"5\"\r\n                value={editableBio}\r\n                onChange={(e) => setEditableBio(e.target.value)}\r\n                placeholder=\"Enter a short bio\"\r\n              />\r\n            ) : (\r\n              <p>{doctor.bio || 'Not Provided'}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* TODO: Implement Step 8 (Styling) */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}