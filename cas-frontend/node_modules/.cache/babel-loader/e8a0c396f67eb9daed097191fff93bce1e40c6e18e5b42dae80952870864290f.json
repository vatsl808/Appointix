{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\DoctorProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaUserMd, FaClock } from 'react-icons/fa';\nimport AppointmentList from '../components/AppointmentList';\nimport AvailabilityModal from '../components/AvailabilityModal'; // Import the modal\nimport '../styles/profile.css';\nimport '../styles/main.css';\nimport '../styles/availability.css'; // Import availability styles\n\n// Mock Doctor data - Defined once\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockDoctorData = {\n  1: {\n    id: 1,\n    name: 'Dr. Evelyn Reed',\n    specialization: 'Cardiology',\n    email: 'evelyn.reed@appointix.test',\n    phone: '555-123-4567',\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\n    profilePictureUrl: null\n  },\n  2: {\n    id: 2,\n    name: 'Dr. Marcus Chen',\n    specialization: 'Neurology',\n    email: 'marcus.chen@appointix.test',\n    phone: '555-987-6543',\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\n    profilePictureUrl: null\n  },\n  3: {\n    id: 3,\n    name: 'Dr. Anya Sharma',\n    specialization: 'Pediatrics',\n    email: 'anya.sharma@appointix.test',\n    phone: '555-111-2222',\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\n    profilePictureUrl: null\n  }\n};\n\n// Mock Availability Data (keyed by doctorId)\nconst defaultAvailability = {\n  Monday: {\n    startTime: \"09:00\",\n    endTime: \"13:00\",\n    isAvailable: true\n  },\n  Tuesday: {\n    startTime: \"09:00\",\n    endTime: \"13:00\",\n    isAvailable: true\n  },\n  Wednesday: {\n    startTime: \"09:00\",\n    endTime: \"13:00\",\n    isAvailable: true\n  },\n  Thursday: {\n    startTime: \"09:00\",\n    endTime: \"13:00\",\n    isAvailable: true\n  },\n  Friday: {\n    startTime: \"09:00\",\n    endTime: \"13:00\",\n    isAvailable: true\n  },\n  Saturday: {\n    startTime: \"10:00\",\n    endTime: \"12:00\",\n    isAvailable: false\n  },\n  // Example different/off day\n  Sunday: {\n    startTime: \"\",\n    endTime: \"\",\n    isAvailable: false\n  }\n};\n// Add second time slot example if needed later\n// Monday: { slots: [{ startTime: \"09:00\", endTime: \"13:00\" }, { startTime: \"18:00\", endTime: \"21:00\" }], isAvailable: true },\n\nconst mockDoctorAvailability = {\n  1: {\n    ...defaultAvailability\n  },\n  // Dr. Reed uses default\n  2: {\n    // Dr. Chen has different hours\n    ...defaultAvailability,\n    Wednesday: {\n      startTime: \"14:00\",\n      endTime: \"18:00\",\n      isAvailable: true\n    },\n    Friday: {\n      startTime: \"\",\n      endTime: \"\",\n      isAvailable: false\n    }\n  },\n  3: {\n    ...defaultAvailability\n  } // Dr. Sharma uses default\n};\n\n// Mock Appointment History Data - Defined once\nconst mockAppointmentHistory = {\n  1: [\n  // Dr. Reed\n  {\n    id: 101,\n    patientName: 'Alice Brown',\n    date: '2025-04-01',\n    time: '10:00',\n    status: 'completed',\n    reason: 'Checkup'\n  }, {\n    id: 102,\n    patientName: 'Bob White',\n    date: '2025-03-20',\n    time: '14:00',\n    status: 'completed',\n    reason: 'Consultation'\n  }],\n  2: [\n  // Dr. Chen\n  {\n    id: 201,\n    patientName: 'Charlie Green',\n    date: '2025-04-05',\n    time: '09:30',\n    status: 'completed',\n    reason: 'Follow-up'\n  }],\n  3: [\n  // Dr. Sharma\n  {\n    id: 301,\n    patientName: 'Diana Black',\n    date: '2025-04-08',\n    time: '11:00',\n    status: 'completed',\n    reason: 'Vaccination'\n  }, {\n    id: 302,\n    patientName: 'Ethan Gray',\n    date: '2025-03-15',\n    time: '15:00',\n    status: 'completed',\n    reason: 'Sick visit'\n  }]\n};\nfunction DoctorProfilePage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [profilePicPreview, setProfilePicPreview] = useState(null);\n  const [profilePicFile, setProfilePicFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editablePhone, setEditablePhone] = useState('');\n  const [editableBio, setEditableBio] = useState('');\n  const [appointmentHistory, setAppointmentHistory] = useState([]);\n  const [doctorAvailability, setDoctorAvailability] = useState(null); // State for availability\n  const [isAvailabilityModalOpen, setIsAvailabilityModalOpen] = useState(false); // State for availability modal\n\n  useEffect(() => {\n    // Simulate API calls\n    const fetchData = () => {\n      setLoading(true);\n      setError('');\n      const foundDoctor = mockDoctorData[id];\n      if (foundDoctor) {\n        setDoctor(foundDoctor);\n        setEditablePhone(foundDoctor.phone || '');\n        setEditableBio(foundDoctor.bio || '');\n        // Simulate Availability Fetch\n        const availability = mockDoctorAvailability[id] || {\n          ...defaultAvailability\n        }; // Fallback to default\n        setDoctorAvailability(availability);\n        // Simulate Appointment History Fetch\n        const history = mockAppointmentHistory[id] || [];\n        setAppointmentHistory(history);\n      } else {\n        setError('Doctor not found.');\n      }\n      setLoading(false);\n    };\n    const timer = setTimeout(fetchData, 300);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  // --- Handlers ---\n  const handleProfilePicChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      setProfilePicFile(file);\n      const reader = new FileReader();\n      reader.onloadend = () => setProfilePicPreview(reader.result);\n      reader.readAsDataURL(file);\n    } else {\n      setProfilePicFile(null);\n      setProfilePicPreview(null);\n    }\n  };\n  const handleEditToggle = () => {\n    if (!isEditing) {\n      setEditablePhone(doctor.phone || '');\n      setEditableBio(doctor.bio || '');\n    } else {\n      setProfilePicPreview(null);\n      setProfilePicFile(null);\n    }\n    setIsEditing(!isEditing);\n  };\n  const handleSave = () => {\n    console.log(\"Saving profile data:\", {\n      phone: editablePhone,\n      bio: editableBio,\n      pictureFile: profilePicFile ? profilePicFile.name : 'No new picture'\n    });\n    const updatedDoctor = {\n      ...doctor,\n      phone: editablePhone,\n      bio: editableBio,\n      profilePictureUrl: profilePicPreview || doctor.profilePictureUrl\n    };\n    setDoctor(updatedDoctor);\n    // mockDoctorData[id] = updatedDoctor; // Mock persistence if needed\n    setIsEditing(false);\n    setProfilePicPreview(null);\n    setProfilePicFile(null);\n    // TODO: Add success/error message handling\n  };\n  const handleOpenAvailabilityModal = () => {\n    setIsAvailabilityModalOpen(true);\n  };\n  const handleCloseAvailabilityModal = () => {\n    setIsAvailabilityModalOpen(false);\n  };\n  const handleUpdateAvailability = newAvailability => {\n    console.log(\"Updating availability to:\", newAvailability);\n    setDoctorAvailability(newAvailability); // Update state\n    // mockDoctorAvailability[id] = newAvailability; // Mock persistence if needed\n    handleCloseAvailabilityModal();\n    // TODO: Add actual API call here later\n  };\n\n  // --- Render Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading doctor profile...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container page-container error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 21\n  }, this);\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container page-container\",\n    children: \"Doctor data unavailable.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 23\n  }, this);\n  const displayImageUrl = profilePicPreview || doctor.profilePictureUrl;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page container page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section profile-header-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-picture-container\",\n        children: [displayImageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: displayImageUrl,\n          alt: `${doctor.name}'s profile`,\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-picture-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(FaUserMd, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"profilePicInput\",\n          className: \"btn btn-secondary btn-sm upload-btn\",\n          children: displayImageUrl ? 'Change Picture' : 'Upload Picture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"profilePicInput\",\n          accept: \"image/*\",\n          onChange: handleProfilePicChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-specialization\",\n          children: doctor.specialization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-email\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `mailto:${doctor.email}`,\n            children: doctor.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details edit-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: isEditing ? 'phone' : undefined,\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              id: \"phone\",\n              name: \"phone\",\n              className: \"form-control\",\n              value: editablePhone,\n              onChange: e => setEditablePhone(e.target.value),\n              placeholder: \"Enter phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: doctor.phone || 'Not Provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: isEditing ? 'bio' : undefined,\n              children: \"Bio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"bio\",\n              name: \"bio\",\n              className: \"form-control\",\n              rows: \"4\",\n              value: editableBio,\n              onChange: e => setEditableBio(e.target.value),\n              placeholder: \"Enter a short bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: doctor.bio || 'Not Provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-actions\",\n          children: !isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditToggle,\n              className: \"btn btn-secondary btn-sm\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOpenAvailabilityModal,\n              className: \"btn btn-secondary btn-sm\",\n              children: [/*#__PURE__*/_jsxDEV(FaClock, {\n                style: {\n                  marginRight: '4px',\n                  verticalAlign: 'middle'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 20\n              }, this), \" Set Availability\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSave,\n              className: \"btn btn-primary btn-sm\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditToggle,\n              className: \"btn btn-secondary btn-sm\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Appointment History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentList, {\n        appointments: appointmentHistory,\n        userType: \"doctor\",\n        onComplete: () => {},\n        onCancel: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvailabilityModal, {\n      isOpen: isAvailabilityModalOpen,\n      currentAvailability: doctorAvailability,\n      onUpdate: handleUpdateAvailability,\n      onClose: handleCloseAvailabilityModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorProfilePage, \"jfNTXvqHF3mR4yso48hrmc1tgH4=\", false, function () {\n  return [useParams];\n});\n_c = DoctorProfilePage;\nexport default DoctorProfilePage;\nvar _c;\n$RefreshReg$(_c, \"DoctorProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","FaUserMd","FaClock","AppointmentList","AvailabilityModal","jsxDEV","_jsxDEV","Fragment","_Fragment","mockDoctorData","id","name","specialization","email","phone","bio","profilePictureUrl","defaultAvailability","Monday","startTime","endTime","isAvailable","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","mockDoctorAvailability","mockAppointmentHistory","patientName","date","time","status","reason","DoctorProfilePage","_s","doctor","setDoctor","loading","setLoading","error","setError","profilePicPreview","setProfilePicPreview","profilePicFile","setProfilePicFile","isEditing","setIsEditing","editablePhone","setEditablePhone","editableBio","setEditableBio","appointmentHistory","setAppointmentHistory","doctorAvailability","setDoctorAvailability","isAvailabilityModalOpen","setIsAvailabilityModalOpen","fetchData","foundDoctor","availability","history","timer","setTimeout","clearTimeout","handleProfilePicChange","event","file","target","files","type","startsWith","reader","FileReader","onloadend","result","readAsDataURL","handleEditToggle","handleSave","console","log","pictureFile","updatedDoctor","handleOpenAvailabilityModal","handleCloseAvailabilityModal","handleUpdateAvailability","newAvailability","className","children","fileName","_jsxFileName","lineNumber","columnNumber","displayImageUrl","src","alt","htmlFor","accept","onChange","style","display","href","undefined","value","e","placeholder","rows","onClick","marginRight","verticalAlign","appointments","userType","onComplete","onCancel","isOpen","currentAvailability","onUpdate","onClose","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/DoctorProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaUserMd, FaClock } from 'react-icons/fa';\r\nimport AppointmentList from '../components/AppointmentList';\r\nimport AvailabilityModal from '../components/AvailabilityModal'; // Import the modal\r\nimport '../styles/profile.css';\r\nimport '../styles/main.css';\r\nimport '../styles/availability.css'; // Import availability styles\r\n\r\n// Mock Doctor data - Defined once\r\nconst mockDoctorData = {\r\n  1: {\r\n    id: 1,\r\n    name: 'Dr. Evelyn Reed',\r\n    specialization: 'Cardiology',\r\n    email: 'evelyn.reed@appointix.test',\r\n    phone: '555-123-4567',\r\n    bio: 'Dr. Reed is a board-certified cardiologist with over 15 years of experience specializing in preventative care and heart health management.',\r\n    profilePictureUrl: null\r\n  },\r\n  2: {\r\n    id: 2,\r\n    name: 'Dr. Marcus Chen',\r\n    specialization: 'Neurology',\r\n    email: 'marcus.chen@appointix.test',\r\n    phone: '555-987-6543',\r\n    bio: 'Specializing in neurological disorders, Dr. Chen is dedicated to providing comprehensive patient care and advancing research in neurology.',\r\n    profilePictureUrl: null\r\n  },\r\n  3: {\r\n    id: 3,\r\n    name: 'Dr. Anya Sharma',\r\n    specialization: 'Pediatrics',\r\n    email: 'anya.sharma@appointix.test',\r\n    phone: '555-111-2222',\r\n    bio: 'Dr. Sharma provides compassionate pediatric care, focusing on child development and wellness from infancy through adolescence.',\r\n    profilePictureUrl: null\r\n  }\r\n};\r\n\r\n// Mock Availability Data (keyed by doctorId)\r\nconst defaultAvailability = {\r\n  Monday:    { startTime: \"09:00\", endTime: \"13:00\", isAvailable: true },\r\n  Tuesday:   { startTime: \"09:00\", endTime: \"13:00\", isAvailable: true },\r\n  Wednesday: { startTime: \"09:00\", endTime: \"13:00\", isAvailable: true },\r\n  Thursday:  { startTime: \"09:00\", endTime: \"13:00\", isAvailable: true },\r\n  Friday:    { startTime: \"09:00\", endTime: \"13:00\", isAvailable: true },\r\n  Saturday:  { startTime: \"10:00\", endTime: \"12:00\", isAvailable: false }, // Example different/off day\r\n  Sunday:    { startTime: \"\",      endTime: \"\",      isAvailable: false },\r\n};\r\n// Add second time slot example if needed later\r\n// Monday: { slots: [{ startTime: \"09:00\", endTime: \"13:00\" }, { startTime: \"18:00\", endTime: \"21:00\" }], isAvailable: true },\r\n\r\n\r\nconst mockDoctorAvailability = {\r\n  1: { ...defaultAvailability }, // Dr. Reed uses default\r\n  2: { // Dr. Chen has different hours\r\n    ...defaultAvailability,\r\n    Wednesday: { startTime: \"14:00\", endTime: \"18:00\", isAvailable: true },\r\n    Friday:    { startTime: \"\", endTime: \"\", isAvailable: false },\r\n  },\r\n  3: { ...defaultAvailability }, // Dr. Sharma uses default\r\n};\r\n\r\n\r\n// Mock Appointment History Data - Defined once\r\nconst mockAppointmentHistory = {\r\n  1: [ // Dr. Reed\r\n    { id: 101, patientName: 'Alice Brown', date: '2025-04-01', time: '10:00', status: 'completed', reason: 'Checkup' },\r\n    { id: 102, patientName: 'Bob White', date: '2025-03-20', time: '14:00', status: 'completed', reason: 'Consultation' },\r\n  ],\r\n  2: [ // Dr. Chen\r\n    { id: 201, patientName: 'Charlie Green', date: '2025-04-05', time: '09:30', status: 'completed', reason: 'Follow-up' },\r\n  ],\r\n  3: [ // Dr. Sharma\r\n    { id: 301, patientName: 'Diana Black', date: '2025-04-08', time: '11:00', status: 'completed', reason: 'Vaccination' },\r\n    { id: 302, patientName: 'Ethan Gray', date: '2025-03-15', time: '15:00', status: 'completed', reason: 'Sick visit' },\r\n  ]\r\n};\r\n\r\nfunction DoctorProfilePage() {\r\n  const { id } = useParams();\r\n  const [doctor, setDoctor] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [profilePicPreview, setProfilePicPreview] = useState(null);\r\n  const [profilePicFile, setProfilePicFile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editablePhone, setEditablePhone] = useState('');\r\n  const [editableBio, setEditableBio] = useState('');\r\n  const [appointmentHistory, setAppointmentHistory] = useState([]);\r\n  const [doctorAvailability, setDoctorAvailability] = useState(null); // State for availability\r\n  const [isAvailabilityModalOpen, setIsAvailabilityModalOpen] = useState(false); // State for availability modal\r\n\r\n  useEffect(() => {\r\n    // Simulate API calls\r\n    const fetchData = () => {\r\n      setLoading(true);\r\n      setError('');\r\n      const foundDoctor = mockDoctorData[id];\r\n      if (foundDoctor) {\r\n        setDoctor(foundDoctor);\r\n        setEditablePhone(foundDoctor.phone || '');\r\n        setEditableBio(foundDoctor.bio || '');\r\n        // Simulate Availability Fetch\r\n        const availability = mockDoctorAvailability[id] || { ...defaultAvailability }; // Fallback to default\r\n        setDoctorAvailability(availability);\r\n        // Simulate Appointment History Fetch\r\n        const history = mockAppointmentHistory[id] || [];\r\n        setAppointmentHistory(history);\r\n      } else {\r\n        setError('Doctor not found.');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    const timer = setTimeout(fetchData, 300);\r\n    return () => clearTimeout(timer);\r\n  }, [id]);\r\n\r\n  // --- Handlers ---\r\n  const handleProfilePicChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith('image/')) {\r\n      setProfilePicFile(file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => setProfilePicPreview(reader.result);\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setProfilePicFile(null);\r\n      setProfilePicPreview(null);\r\n    }\r\n  };\r\n\r\n  const handleEditToggle = () => {\r\n    if (!isEditing) {\r\n      setEditablePhone(doctor.phone || '');\r\n      setEditableBio(doctor.bio || '');\r\n    } else {\r\n      setProfilePicPreview(null);\r\n      setProfilePicFile(null);\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    console.log(\"Saving profile data:\", {\r\n      phone: editablePhone,\r\n      bio: editableBio,\r\n      pictureFile: profilePicFile ? profilePicFile.name : 'No new picture'\r\n    });\r\n    const updatedDoctor = {\r\n      ...doctor,\r\n      phone: editablePhone,\r\n      bio: editableBio,\r\n      profilePictureUrl: profilePicPreview || doctor.profilePictureUrl\r\n    };\r\n    setDoctor(updatedDoctor);\r\n    // mockDoctorData[id] = updatedDoctor; // Mock persistence if needed\r\n    setIsEditing(false);\r\n    setProfilePicPreview(null);\r\n    setProfilePicFile(null);\r\n    // TODO: Add success/error message handling\r\n  };\r\n\r\n  const handleOpenAvailabilityModal = () => {\r\n    setIsAvailabilityModalOpen(true);\r\n  };\r\n\r\n  const handleCloseAvailabilityModal = () => {\r\n    setIsAvailabilityModalOpen(false);\r\n  };\r\n\r\n  const handleUpdateAvailability = (newAvailability) => {\r\n    console.log(\"Updating availability to:\", newAvailability);\r\n    setDoctorAvailability(newAvailability); // Update state\r\n    // mockDoctorAvailability[id] = newAvailability; // Mock persistence if needed\r\n    handleCloseAvailabilityModal();\r\n    // TODO: Add actual API call here later\r\n  };\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return <div className=\"loading\">Loading doctor profile...</div>;\r\n  if (error) return <div className=\"container page-container error\">{error}</div>;\r\n  if (!doctor) return <div className=\"container page-container\">Doctor data unavailable.</div>;\r\n\r\n  const displayImageUrl = profilePicPreview || doctor.profilePictureUrl;\r\n\r\n  return (\r\n    <div className=\"profile-page container page-container\">\r\n      <h1>Doctor Profile</h1>\r\n\r\n      {/* Combined Details Section */}\r\n      <div className=\"profile-section profile-header-section\">\r\n        <div className=\"profile-picture-container\">\r\n          {displayImageUrl ? (\r\n            <img src={displayImageUrl} alt={`${doctor.name}'s profile`} className=\"profile-picture\" />\r\n          ) : (\r\n            <div className=\"profile-picture-placeholder\"><FaUserMd /></div>\r\n          )}\r\n          <label htmlFor=\"profilePicInput\" className=\"btn btn-secondary btn-sm upload-btn\">\r\n            {displayImageUrl ? 'Change Picture' : 'Upload Picture'}\r\n          </label>\r\n          <input\r\n            type=\"file\" id=\"profilePicInput\" accept=\"image/*\"\r\n            onChange={handleProfilePicChange} style={{ display: 'none' }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"profile-header-details\">\r\n          {/* Basic Info */}\r\n          <h2>{doctor.name}</h2>\r\n          <p className=\"profile-specialization\">{doctor.specialization}</p>\r\n          <p className=\"profile-email\">\r\n            <a href={`mailto:${doctor.email}`}>{doctor.email}</a>\r\n          </p>\r\n\r\n          {/* Editable Details */}\r\n          <div className=\"profile-details edit-section\">\r\n            <div className=\"detail-item\">\r\n              <label htmlFor={isEditing ? 'phone' : undefined}>Phone:</label>\r\n              {isEditing ? (\r\n                <input type=\"tel\" id=\"phone\" name=\"phone\" className=\"form-control\"\r\n                  value={editablePhone} onChange={(e) => setEditablePhone(e.target.value)}\r\n                  placeholder=\"Enter phone number\" />\r\n              ) : (\r\n                <p>{doctor.phone || 'Not Provided'}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"detail-item\">\r\n              <label htmlFor={isEditing ? 'bio' : undefined}>Bio:</label>\r\n              {isEditing ? (\r\n                <textarea id=\"bio\" name=\"bio\" className=\"form-control\" rows=\"4\"\r\n                  value={editableBio} onChange={(e) => setEditableBio(e.target.value)}\r\n                  placeholder=\"Enter a short bio\" />\r\n              ) : (\r\n                <p>{doctor.bio || 'Not Provided'}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"profile-actions\">\r\n            {!isEditing ? (\r\n              <>\r\n                <button onClick={handleEditToggle} className=\"btn btn-secondary btn-sm\">Edit Profile</button>\r\n                {/* Show Edit Availability only when NOT editing profile */}\r\n                <button onClick={handleOpenAvailabilityModal} className=\"btn btn-secondary btn-sm\">\r\n                   <FaClock style={{ marginRight: '4px', verticalAlign: 'middle' }}/> Set Availability\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <div className=\"edit-actions\"> {/* These show when editing profile */}\r\n                <button onClick={handleSave} className=\"btn btn-primary btn-sm\">Save Changes</button>\r\n                <button onClick={handleEditToggle} className=\"btn btn-secondary btn-sm\">Cancel</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Appointment History Section */}\r\n      <div className=\"profile-section\">\r\n        <div className=\"profile-section-header\">\r\n          <h3>Appointment History</h3>\r\n        </div>\r\n        <AppointmentList\r\n          appointments={appointmentHistory}\r\n          userType=\"doctor\"\r\n          onComplete={() => {}}\r\n          onCancel={() => {}}\r\n        />\r\n      </div>\r\n\r\n      {/* Render AvailabilityModal */}\r\n      <AvailabilityModal\r\n        isOpen={isAvailabilityModalOpen}\r\n        currentAvailability={doctorAvailability}\r\n        onUpdate={handleUpdateAvailability}\r\n        onClose={handleCloseAvailabilityModal}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}