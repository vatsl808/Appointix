{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\DoctorListPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport DoctorCard from '../components/DoctorCard';\nimport '../styles/doctor-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorListPage() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // TODO: Replace with actual API call\n    const fetchDoctors = async () => {\n      try {\n        // Mock data\n        const mockDoctors = [{\n          id: 1,\n          name: 'Dr. Smith',\n          specialization: 'Cardiology'\n        }, {\n          id: 2,\n          name: 'Dr. Johnson',\n          specialization: 'Neurology'\n        }, {\n          id: 3,\n          name: 'Dr. Williams',\n          specialization: 'Pediatrics'\n        }];\n        setDoctors(mockDoctors);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n        setLoading(false);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading doctors...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doctor-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-list\",\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n        doctor: doctor\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorListPage, \"M+QStYsO4Kau999EtXnV4dyODkw=\");\n_c = DoctorListPage;\nexport default DoctorListPage;\nvar _c;\n$RefreshReg$(_c, \"DoctorListPage\");","map":{"version":3,"names":["useState","useEffect","DoctorCard","jsxDEV","_jsxDEV","DoctorListPage","_s","doctors","setDoctors","loading","setLoading","fetchDoctors","mockDoctors","id","name","specialization","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","_c","$RefreshReg$"],"sources":["c:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/DoctorListPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport DoctorCard from '../components/DoctorCard';\r\nimport '../styles/doctor-list.css';\r\n\r\nfunction DoctorListPage() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // TODO: Replace with actual API call\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        // Mock data\r\n        const mockDoctors = [\r\n          { id: 1, name: 'Dr. Smith', specialization: 'Cardiology' },\r\n          { id: 2, name: 'Dr. Johnson', specialization: 'Neurology' },\r\n          { id: 3, name: 'Dr. Williams', specialization: 'Pediatrics' },\r\n        ];\r\n        setDoctors(mockDoctors);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading doctors...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"doctor-list-page\">\r\n      <h1>Available Doctors</h1>\r\n      <div className=\"doctor-list\">\r\n        {doctors.map(doctor => (\r\n          <DoctorCard key={doctor.id} doctor={doctor} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorListPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,WAAW,GAAG,CAClB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,WAAW;UAAEC,cAAc,EAAE;QAAa,CAAC,EAC1D;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,aAAa;UAAEC,cAAc,EAAE;QAAY,CAAC,EAC3D;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,cAAc;UAAEC,cAAc,EAAE;QAAa,CAAC,CAC9D;QACDP,UAAU,CAACI,WAAW,CAAC;QACvBF,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1D;EAEA,oBACEnB,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBZ,OAAO,CAACiB,GAAG,CAACC,MAAM,iBACjBrB,OAAA,CAACF,UAAU;QAAiBuB,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACZ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAvCQD,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAyCvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}