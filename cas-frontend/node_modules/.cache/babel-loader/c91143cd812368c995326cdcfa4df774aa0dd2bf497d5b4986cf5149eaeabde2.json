{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Ensure React is imported\nimport { useNavigate } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm';\nimport '../styles/main.css'; // Use shared auth styles from main.css\nimport signupIllustration from '../assets/signup_image.png'; // Import the signup image\n\n// Pass setIsAuthenticated if registration should also log the user in\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage({\n  setIsAuthenticated\n}) {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async userData => {\n    try {\n      setError(''); // Clear previous errors\n\n      // Call the backend API\n      const response = await fetch('http://localhost:5001/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        // Handle errors from the backend (e.g., email already exists)\n        throw new Error(result.error || `HTTP error! status: ${response.status}`);\n      }\n\n      // Registration successful (Backend currently doesn't return a token on register)\n      // For now, redirect to login page after successful registration\n      console.log('Registration successful:', result.message);\n      alert('Registration successful! Please log in.'); // Give user feedback\n      navigate('/login');\n\n      // --- OLD MOCK LOGIN LOGIC (Remove/Comment out) ---\n      // localStorage.setItem('token', 'mock-token');\n      // localStorage.setItem('userType', userData.userType);\n      // if (setIsAuthenticated) {\n      //     setIsAuthenticated(true);\n      // }\n      // navigate(userData.userType === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\n      // --- END OLD MOCK ---\n    } catch (err) {\n      console.error(\"Registration error:\", err);\n      setError(err.message || 'Registration failed. Please check your details and try again.');\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Use the same structure as LoginPage for consistency\n    _jsxDEV(\"div\", {\n      className: \"auth-page register-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-visual\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: signupIllustration,\n            alt: \"Signup Illustration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle\",\n              children: \"Enter your details to create an account.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"auth-switch-link\",\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/login\",\n                children: \"Login here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(RegisterPage, \"iYeoHZ50hDVhDOjNvGr4rV7yYW4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","RegisterForm","signupIllustration","jsxDEV","_jsxDEV","RegisterPage","setIsAuthenticated","_s","error","setError","navigate","handleRegister","userData","response","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","status","console","log","message","alert","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","href","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'; // Ensure React is imported\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RegisterForm from '../components/RegisterForm';\r\nimport '../styles/main.css'; // Use shared auth styles from main.css\r\nimport signupIllustration from '../assets/signup_image.png'; // Import the signup image\r\n\r\n// Pass setIsAuthenticated if registration should also log the user in\r\nfunction RegisterPage({ setIsAuthenticated }) {\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (userData) => {\r\n    try {\r\n      setError(''); // Clear previous errors\r\n\r\n      // Call the backend API\r\n      const response = await fetch('http://localhost:5001/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!response.ok) {\r\n        // Handle errors from the backend (e.g., email already exists)\r\n        throw new Error(result.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Registration successful (Backend currently doesn't return a token on register)\r\n      // For now, redirect to login page after successful registration\r\n      console.log('Registration successful:', result.message);\r\n      alert('Registration successful! Please log in.'); // Give user feedback\r\n      navigate('/login');\r\n\r\n      // --- OLD MOCK LOGIN LOGIC (Remove/Comment out) ---\r\n      // localStorage.setItem('token', 'mock-token');\r\n      // localStorage.setItem('userType', userData.userType);\r\n      // if (setIsAuthenticated) {\r\n      //     setIsAuthenticated(true);\r\n      // }\r\n      // navigate(userData.userType === 'doctor' ? '/doctor-dashboard' : '/patient-dashboard');\r\n      // --- END OLD MOCK ---\r\n\r\n    } catch (err) {\r\n      console.error(\"Registration error:\", err);\r\n      setError(err.message || 'Registration failed. Please check your details and try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Use the same structure as LoginPage for consistency\r\n    <div className=\"auth-page register-page\">\r\n      <div className=\"auth-container\">\r\n        {/* Left Side - Visual/Branding */}\r\n        <div className=\"auth-visual\">\r\n           {/* Display the signup illustration */}\r\n           <img src={signupIllustration} alt=\"Signup Illustration\" />\r\n           {/* Removed the visual-content div */}\r\n        </div>\r\n\r\n        {/* Right Side - Form */}\r\n        <div className=\"auth-form-container\">\r\n          <div className=\"form-wrapper\">\r\n            <h2>Sign Up</h2>\r\n            <p className=\"subtitle\">Enter your details to create an account.</p>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            <RegisterForm onRegister={handleRegister} />\r\n            <p className=\"auth-switch-link\">\r\n              Already have an account? <a href=\"/login\">Login here</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}