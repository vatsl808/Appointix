{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsl\\\\OneDrive\\\\Desktop\\\\CAS\\\\cas-frontend\\\\src\\\\pages\\\\DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AppointmentList from '../components/AppointmentList';\nimport '../styles/dashboard.css';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorDashboard() {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      setLoading(true);\n      setError('');\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError(\"Authentication required. Please log in.\");\n        setLoading(false);\n        // In a real app, you might redirect here: navigate('/login');\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:5001/api/appointments/doctor', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setAppointments(data);\n      } catch (err) {\n        console.error('Error fetching doctor appointments:', err);\n        setError(err.message || 'Failed to load appointments.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAppointments();\n  }, []); // Empty dependency array means run once on mount\n\n  const handleComplete = async appointmentId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError(\"Authentication required to complete appointment.\");\n      return;\n    }\n    setError(''); // Clear previous errors\n\n    // Optimistic UI update (optional but good UX)\n    // Update the status locally first\n    setAppointments(prevAppointments => prevAppointments.map(a => a.id === appointmentId ? {\n      ...a,\n      status: 'completed'\n    } : a));\n    try {\n      const response = await fetch(`http://localhost:5001/api/appointments/${appointmentId}/complete`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n          // No Content-Type needed for PUT with no body\n        }\n      });\n      const result = await response.json(); // Still parse potential error messages\n\n      if (!response.ok) {\n        // Revert optimistic update on error\n        setAppointments(prevAppointments => prevAppointments.map(a => a.id === appointmentId ? {\n          ...a,\n          status: 'upcoming'\n        } : a // Revert status\n        ));\n        throw new Error(result.error || `HTTP error! status: ${response.status}`);\n      }\n\n      // Success: Local state is already updated optimistically\n      console.log(result.message || \"Appointment marked complete.\");\n      // Optionally show a success alert: alert(result.message || \"Appointment marked complete.\");\n    } catch (err) {\n      console.error('Error completing appointment:', err);\n      setError(err.message || 'Failed to mark appointment as complete.');\n      // Revert optimistic update if API call failed after initial state change\n      setAppointments(prevAppointments => prevAppointments.map(a => a.id === appointmentId ? {\n        ...a,\n        status: 'upcoming'\n      } : a // Revert status\n      ));\n      alert(`Error: ${err.message || 'Failed to mark appointment as complete.'}`); // Show error alert\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading appointments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle error state by returning error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-page page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render dashboard content if no error and not loading\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doctor Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Your Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentList, {\n          appointments: appointments,\n          onComplete: handleComplete // Pass the completion handler\n          ,\n          userType: \"doctor\"\n          // No onCancel or onEditRequest needed for doctor view\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this) //\n  ;\n}\n_s(DoctorDashboard, \"6Iy5HoDrAFBEhLUlxVpHrqjAwzg=\");\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","AppointmentList","jsxDEV","_jsxDEV","DoctorDashboard","_s","appointments","setAppointments","loading","setLoading","error","setError","fetchAppointments","token","localStorage","getItem","response","fetch","headers","ok","errorData","json","Error","status","data","err","console","message","handleComplete","appointmentId","prevAppointments","map","a","id","method","result","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","userType","_c","$RefreshReg$"],"sources":["C:/Users/vatsl/OneDrive/Desktop/CAS/cas-frontend/src/pages/DoctorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AppointmentList from '../components/AppointmentList';\r\nimport '../styles/dashboard.css';\r\nimport '../styles/main.css';\r\n\r\nfunction DoctorDashboard() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setError(\"Authentication required. Please log in.\");\r\n        setLoading(false);\r\n        // In a real app, you might redirect here: navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5001/api/appointments/doctor', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setAppointments(data);\r\n\r\n      } catch (err) {\r\n        console.error('Error fetching doctor appointments:', err);\r\n        setError(err.message || 'Failed to load appointments.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, []); // Empty dependency array means run once on mount\r\n\r\n  const handleComplete = async (appointmentId) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setError(\"Authentication required to complete appointment.\");\r\n      return;\r\n    }\r\n    setError(''); // Clear previous errors\r\n\r\n    // Optimistic UI update (optional but good UX)\r\n    // Update the status locally first\r\n    setAppointments(prevAppointments =>\r\n      prevAppointments.map(a =>\r\n        a.id === appointmentId ? { ...a, status: 'completed' } : a\r\n      )\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5001/api/appointments/${appointmentId}/complete`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n          // No Content-Type needed for PUT with no body\r\n        }\r\n      });\r\n\r\n      const result = await response.json(); // Still parse potential error messages\r\n\r\n      if (!response.ok) {\r\n        // Revert optimistic update on error\r\n        setAppointments(prevAppointments =>\r\n          prevAppointments.map(a =>\r\n            a.id === appointmentId ? { ...a, status: 'upcoming' } : a // Revert status\r\n          )\r\n        );\r\n        throw new Error(result.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Success: Local state is already updated optimistically\r\n      console.log(result.message || \"Appointment marked complete.\");\r\n      // Optionally show a success alert: alert(result.message || \"Appointment marked complete.\");\r\n\r\n    } catch (err) {\r\n      console.error('Error completing appointment:', err);\r\n      setError(err.message || 'Failed to mark appointment as complete.');\r\n      // Revert optimistic update if API call failed after initial state change\r\n       setAppointments(prevAppointments =>\r\n          prevAppointments.map(a =>\r\n            a.id === appointmentId ? { ...a, status: 'upcoming' } : a // Revert status\r\n          )\r\n       );\r\n       alert(`Error: ${err.message || 'Failed to mark appointment as complete.'}`); // Show error alert\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading appointments...</div>;\r\n  }\r\n\r\n  // Handle error state by returning error message\r\n  if (error) {\r\n    return (\r\n      <div className=\"dashboard-page page-container\">\r\n         <div className=\"container\">\r\n            <div className=\"alert alert-danger\">{error}</div>\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render dashboard content if no error and not loading\r\n  return (\r\n    <div className=\"dashboard-page page-container\">\r\n      <div className=\"container\">\r\n        <div className=\"dashboard-header\">\r\n          <h2>Doctor Dashboard</h2>\r\n        </div>\r\n\r\n        <div className=\"dashboard-section\">\r\n          <div className=\"dashboard-section-header\">\r\n            <h3>Your Appointments</h3>\r\n            {/* No button needed here */}\r\n          </div>\r\n          <AppointmentList\r\n            appointments={appointments}\r\n            onComplete={handleComplete} // Pass the completion handler\r\n            userType=\"doctor\"\r\n            // No onCancel or onEditRequest needed for doctor view\r\n          />\r\n        </div>\r\n      </div> {/* Close container */}\r\n    </div> //\r\n  );\r\n}\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}